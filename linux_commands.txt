Команды: Ctrl + Alt + T открыть терминал

ls (list) - показывает содержимое какого либо каталога (по умолчанию текущего), может работать с любым каталогом если ввести аргумент (название каталога) нпр: ls -l /home/

pwd - текущая директория

ls -l - дополнительные параметры файлов и каталогов

ls -la - посмотреть скрытые файлы

ls -l .. - вышестоящий каталог

ls --help - команда покажет все ключи

touch - создать файл (touch new_file)
> new_file.txt

mkdir - создание директории (mkdir dir - директория под названием dir, если хочу создать директорию в директории то mkdir dir/dir2) а что бы создать файл в этой директории пишем touch dir/dir2/file

mkdir -p - ключ для создания сразу нескольких директорий ( mkdir -p dir3/dir4/dir5) 

cd (change dir) - смена текущей директории, выведет по умолчанию в домашнюю директорию пользователя (если не поставить аргумент)
 cd /home/ 

Абсолютный путь - путь от корня нашей файловой системы, начинается со /
cd /home/nastusya

Относительный путь - идентефецирует положение файла или каталога из текущей директории.
если я нахожусь в dir1 и хочу попасть в dir3 то пищу 
cd dir2/dir3

rm (remove) - удаление файлов (работает только с файлами)
rm file 

Делаем маску для того что бы удалить сразу несколько файлов:
* - любой набор любых символы
? - один любой символ

rm *2 начинается с любого набора символов и заканчивается на 2

rm file* - удалить файлы которые начинаются на file и заканчиваются на любой символ

rmdir dir2 - удить пустую директорию

Что бы удалить директорию, то необходимо сначала удалить файлы которые находятся в этой директории. Что бы удалить всю директорию с содержимым необходимо использовать ключ -r

rm -r dir2 

cp (copy) - копировать файл (напрмер из текущей директории в созданную) 

сp file dir/ (что копируем, куда копируем)

сp так же работает с директорией, для этого используем
 ключ -r 

cp -r dir dir2/


mv (move) - перемещение файла (исходный файл будет удален)
mv file.txt ../../  перенести выше на 2 директории выше
mv file.txt dir2/dir3 если я нахожусь в dir1 и хочу переместить файл ниже на 2 директории

mv dir2/ ./dir/ - переместить директорию

mv - может служить для переименования файлов

type что бы узнать внутренняя или внешняя та или иная команда. 
(type ls)

who - кто сейчас работает на этом сервере, имя, к какому терминалу подключен и тд.

cat - показывает (выводит) содержимое файла
cat > название файла - создает файл, где далее можно что то написать. После того как туда что то написали, нажать Ctrl + D
Это сохранит файл и перенесет нас в обычный режим.

echo 'I like Linux' > file1  - помещает какую либо надпись в файл

file название файла - узнать расширение файла
 

cat название_файла название_файла > название_нового_файла - объединить содержимоей двух файлов в новом файле

cat >> Название_файла - операция с помощью которой можно дописать что либо в файл


vi название_файла -  редактировать файл. Выйти из vi, нужно нажать Esc а затем ZZ


Поиск всех файлов
Показать все файлы в текущей директории:

 find

 find .

 find . -print


Поиск файлов о опр. папке
Показать все файлы в указанной директории:

 find ./test

Искать файлы по имени в текущей папке:

 find . -name "*.jpg"

Не учитывать регистр при поиске по имени:

 find . -iname "test*"

type Тип объекта поиска. 
Возможные варианты: 
 f — файл; 
 d — каталог; 
 l — ссылка; 
 p — pipe; 
 s — сокет.

grep - Утилита grep решаем множество задач, в основном она используется для поиска строк, соответствующих строке в тексте или содержимому файлов. Также она может находить по шаблону или регулярным выражениям. Команда в считанные секунды найдёт файл в с нужной строчкой, текст в файле или отфильтрует из вывода только пару нужных строк.

если нужно найти конкретную папку или один файл среди сотни других, то мы можем передать вывод команды ls в grep через вертикальную черту (|), а уже grep-у параметром передать нужное слово.

Синтаксис команды выглядит следующим образом:

$ grep [опции] шаблон [имя файла...]

Или:

$ команда | grep [опции] шаблон

 Опции - это дополнительные параметры, с помощью которых указываются различные настройки поиска и вывода, например количество строк или режим инверсии.

 Шаблон - это любая строка или регулярное выражение, по которому будет вестись поиск

 Файл и команда - это то место, где будет вестись поиск. Как вы увидите дальше, grep позволяет искать в нескольких файлах и даже в каталоге, используя рекурсивный режим.

Но если нужно найти конкретную папку или один файл среди сотни других, то мы можем передать вывод команды ls в grep через вертикальную черту (|), а уже grep-у параметром передать нужное слово.
$ ls | grep Documents

ПОИСК СТРОК
Если же нужно найти не одно слово, а словосочетание или целое предложение, то параметр команды grep должно быть выделено кавычками. Grep поддерживает как одинарные, так и двойные кавычки.

$ ls | grep 'My Documents'

Несмотря на то, что команда grep чаще используется как своего рода фильтр для других команд, но её также можно использовать отдельно как на примере ниже.

$ grep 'Class 1' Students.txt
или grep linux file2.txt
В этом примере мы вели поиск указанных в кавычках слов в файле Students.txt и команда grep успешно справилась со своей задачей.


Команда less

Утилита less выводит содержимое файла, но отображает его только в рамках текущего окна в режиме просмотра.

less myfile.txt

ы можете прокручивать текст файла клавишами стрелок или перелистывать страницы клавишами w и z.

Для поиска текста внутри файла нажмите /.

Для просмотра списка доступных горячих клавиш нажмите h

Чтобы выйти из режима просмотра используется клавиша q.

Очень удобно, что после выхода окно терминала остается чистым и не содержит текст файла.
Команда head

Команда head выводит на экран только первые 10 строк файла.

head somefile.txt

Используя опцию -n можно задать количество строк, которое нужно вывести. Например, чтобы вывести 15 строк используется команда:

head -n15 somefile.txt

Вместо -n можно просто использовать знак минус -, за которым сразу указывается количество строк.

head -11 somefile.txt

Команда tail

Команда tail аналогична команде head, но выводит последние 10 строк файла.

tail somefile.tx
